{"version":3,"sources":["../../src/models/initModels.js"],"names":["Sequelize","require","sequelize","presupuestoModel","define","presupuestoid","type","INTEGER","primaryKey","autoIncrement","periodo","STRING","gananciaPresupuestadaTotal","FLOAT","defaultValue","cantidadPresupuestadaTotal","anio","Date","getFullYear","nombre","timestamps","productoModel","CIDPRODUCTO","CNOMBREPRODUCTO","CTIPOPRODUCTO","CDESCRIPCIONPRODUCTO","CPRECIO1","CPRECIO2","CPRECIO3","CPRECIO4","CPRECIO5","CPRECIO6","CPRECIO7","CPRECIO8","CPRECIO9","CPRECIO10","itemPresupuestoModel","presupuestoitemid","itemGananciaEstimadaModel","itemgananciaid","cantidad","itemCantidadEstimadaModel","itemcantidadunidades","hasMany","foreignKey","belongsTo"],"mappings":"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","file":"initModels.js","sourcesContent":["const Sequelize = require('sequelize');\nexport default (sequelize) => {\n  const presupuestoModel = sequelize.define('presupuestos', {\n    presupuestoid: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    periodo: {\n      type: Sequelize.STRING,\n    },\n    gananciaPresupuestadaTotal: {\n      type: Sequelize.FLOAT,\n      defaultValue: 0,\n    },\n    cantidadPresupuestadaTotal: {\n      type: Sequelize.INTEGER,\n      defaultValue: 0,\n    },\n    anio: {\n      type: Sequelize.INTEGER,\n      defaultValue: new Date().getFullYear(),\n    },\n    nombre: {\n      type: Sequelize.STRING,\n    },\n  }, { timestamps: false });\n\n  const productoModel = sequelize.define('admProductos', {\n    CIDPRODUCTO: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n    },\n    CNOMBREPRODUCTO: {\n      type: Sequelize.STRING,\n    },\n    CTIPOPRODUCTO: {\n      type: Sequelize.INTEGER,\n    },\n    CDESCRIPCIONPRODUCTO: {\n      type: Sequelize.STRING,\n    },\n    CPRECIO1: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO2: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO3: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO4: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO5: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO6: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO7: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO8: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO9: {\n      type: Sequelize.FLOAT,\n    },\n    CPRECIO10: {\n      type: Sequelize.FLOAT,\n    },\n  }, { timestamps: false });\n\n  const itemPresupuestoModel = sequelize.define('itemPresupuestos', {\n    presupuestoitemid: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n  }, { timestamps: false });\n\n  const itemGananciaEstimadaModel = sequelize.define('itemGanancias', {\n    itemgananciaid: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    periodo: {\n      type: Sequelize.INTEGER,\n      defaultValue: 0,\n    },\n    cantidad: {\n      type: Sequelize.FLOAT,\n    },\n  }, { timestamps: false });\n\n  const itemCantidadEstimadaModel = sequelize.define('itemCantidadUnidades', {\n    itemcantidadunidades: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    periodo: {\n      type: Sequelize.INTEGER,\n      defaultValue: 0,\n    },\n    cantidad: {\n      type: Sequelize.FLOAT,\n    },\n  }, { timestamps: false });\n\n  presupuestoModel.hasMany(itemPresupuestoModel, { foreignKey: 'presupuestoid' });\n  itemPresupuestoModel.belongsTo(presupuestoModel, { foreignKey: 'presupuestoid' });\n  itemPresupuestoModel.belongsTo(productoModel, { foreignKey: 'CIDPRODUCTO' });\n  itemPresupuestoModel.hasMany(itemGananciaEstimadaModel, { foreignKey: 'presupuestoitemid' });\n  itemPresupuestoModel.hasMany(itemCantidadEstimadaModel, { foreignKey: 'presupuestoitemid' });\n  itemGananciaEstimadaModel.belongsTo(itemPresupuestoModel, { foreignKey: 'presupuestoitemid' });\n  itemCantidadEstimadaModel.belongsTo(itemPresupuestoModel, { foreignKey: 'presupuestoitemid' });\n\n  return {\n    presupuestoModel,\n    productoModel,\n    itemPresupuestoModel,\n    itemGananciaEstimadaModel,\n    itemCantidadEstimadaModel,\n  };\n}\n"]}
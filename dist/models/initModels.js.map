{"version":3,"sources":["../../src/models/initModels.js"],"names":["Sequelize","require","sequelize","userModel","define","id","type","INTEGER","primaryKey","autoIncrement","email","STRING","password","name","timestamps","eventModel","topic","date","DATEONLY","defaultValue","Date","scheduleStart","scheduleEnd","address","diary","active","BOOLEAN","assistanModel","user","event","talkModel","userName","title","aboutTalk","aboutYou","twitter","linkedin","facebook"],"mappings":";;;;;AAAA,IAAMA,YAAYC,QAAQ,WAAR,CAAlB;;kBACe,UAACC,SAAD,EAAe;AAC5B,MAAMC,YAAYD,UAAUE,MAAV,CAAiB,OAAjB,EAA0B;AAC1CC,QAAI;AACFC,YAAMN,UAAUO,OADd;AAEFC,kBAAY,IAFV;AAGFC,qBAAe;AAHb,KADsC;AAM1CC,WAAO;AACLJ,YAAMN,UAAUW;AADX,KANmC;AAS1CC,cAAU;AACRN,YAAMN,UAAUW;AADR,KATgC;AAY1CE,UAAM;AACJP,YAAMN,UAAUW;AADZ,KAZoC;AAe1CL,UAAM;AACJA,YAAMN,UAAUW;AADZ;AAfoC,GAA1B,EAkBf,EAAEG,YAAY,KAAd,EAlBe,CAAlB;;AAoBA,MAAMC,aAAab,UAAUE,MAAV,CAAiB,QAAjB,EAA2B;AAC5CC,QAAI;AACFC,YAAMN,UAAUO,OADd;AAEFC,kBAAY,IAFV;AAGFC,qBAAe;AAHb,KADwC;AAM5CO,WAAO;AACLV,YAAMN,UAAUW;AADX,KANqC;AAS5CM,UAAM;AACJX,YAAMN,UAAUkB,QADZ;AAEJC,oBAAc,IAAIC,IAAJ;AAFV,KATsC;AAa5CC,mBAAe;AACbf,YAAMN,UAAUW;AADH,KAb6B;AAgB5CW,iBAAa;AACXhB,YAAMN,UAAUW;AADL,KAhB+B;AAmB5CY,aAAS;AACPjB,YAAMN,UAAUW;AADT,KAnBmC;AAsB5Ca,WAAO;AACLlB,YAAMN,UAAUW;AADX,KAtBqC;AAyB5Cc,YAAQ;AACNnB,YAAMN,UAAU0B;AADV;AAzBoC,GAA3B,EA4BhB,EAAEZ,YAAY,KAAd,EA5BgB,CAAnB;;AA8BA,MAAMa,gBAAgBzB,UAAUE,MAAV,CAAiB,YAAjB,EAA+B;AACnDC,QAAI;AACFC,YAAMN,UAAUO,OADd;AAEFC,kBAAY,IAFV;AAGFC,qBAAe;AAHb,KAD+C;AAMnDmB,UAAM;AACJtB,YAAMN,UAAUO;AADZ,KAN6C;AASnDsB,WAAO;AACLvB,YAAMN,UAAUO;AADX;AAT4C,GAA/B,EAYnB,EAAEO,YAAY,KAAd,EAZmB,CAAtB;;AAcA,MAAMgB,YAAY5B,UAAUE,MAAV,CAAiB,OAAjB,EAA0B;AAC1CC,QAAI;AACFC,YAAMN,UAAUO,OADd;AAEFC,kBAAY,IAFV;AAGFC,qBAAe;AAHb,KADsC;AAM1CmB,UAAM;AACJtB,YAAMN,UAAUO;AADZ,KANoC;AAS1CwB,cAAU;AACRzB,YAAMN,UAAUW;AADR,KATgC;AAY1CD,WAAO;AACLJ,YAAMN,UAAUW;AADX,KAZmC;AAe1CqB,WAAO;AACL1B,YAAMN,UAAUW;AADX,KAfmC;AAkB1CsB,eAAW;AACT3B,YAAMN,UAAUW;AADP,KAlB+B;AAqB1CuB,cAAU;AACR5B,YAAMN,UAAUW;AADR,KArBgC;AAwB1CwB,aAAS;AACP7B,YAAMN,UAAUW;AADT,KAxBiC;AA2B1CyB,cAAU;AACR9B,YAAMN,UAAUW;AADR,KA3BgC;AA8B1C0B,cAAU;AACR/B,YAAMN,UAAUW;AADR;AA9BgC,GAA1B,EAiCf,EAAEG,YAAY,KAAd,EAjCe,CAAlB;;AAmCA,SAAO;AACLX,wBADK;AAELY,0BAFK;AAGLY,gCAHK;AAILG;AAJK,GAAP;AAMD,C","file":"initModels.js","sourcesContent":["const Sequelize = require('sequelize');\nexport default (sequelize) => {\n  const userModel = sequelize.define('users', {\n    id: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    email: {\n      type: Sequelize.STRING,\n    },\n    password: {\n      type: Sequelize.STRING,\n    },\n    name: {\n      type: Sequelize.STRING,\n    },\n    type: {\n      type: Sequelize.STRING,\n    },\n  }, { timestamps: false });\n\n  const eventModel = sequelize.define('events', {\n    id: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    topic: {\n      type: Sequelize.STRING,\n    },\n    date: {\n      type: Sequelize.DATEONLY,\n      defaultValue: new Date(),\n    },\n    scheduleStart: {\n      type: Sequelize.STRING,\n    },\n    scheduleEnd: {\n      type: Sequelize.STRING,\n    },\n    address: {\n      type: Sequelize.STRING,\n    },\n    diary: {\n      type: Sequelize.STRING,\n    },\n    active: {\n      type: Sequelize.BOOLEAN,\n    },\n  }, { timestamps: false });\n\n  const assistanModel = sequelize.define('assistants', {\n    id: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    user: {\n      type: Sequelize.INTEGER,\n    },\n    event: {\n      type: Sequelize.INTEGER,\n    },\n  }, { timestamps: false });\n\n  const talkModel = sequelize.define('talks', {\n    id: {\n      type: Sequelize.INTEGER,\n      primaryKey: true,\n      autoIncrement: true,\n    },\n    user: {\n      type: Sequelize.INTEGER,\n    },\n    userName: {\n      type: Sequelize.STRING,\n    },\n    email: {\n      type: Sequelize.STRING,\n    },\n    title: {\n      type: Sequelize.STRING,\n    },\n    aboutTalk: {\n      type: Sequelize.STRING,\n    },\n    aboutYou: {\n      type: Sequelize.STRING,\n    },\n    twitter: {\n      type: Sequelize.STRING,\n    },\n    linkedin: {\n      type: Sequelize.STRING,\n    },\n    facebook: {\n      type: Sequelize.STRING,\n    },\n  }, { timestamps: false });\n\n  return {\n    userModel,\n    eventModel,\n    assistanModel,\n    talkModel,\n  };\n}\n"]}
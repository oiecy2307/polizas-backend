{"version":3,"sources":["../../src/api/pedidos.js"],"names":["nombresServicios","sequelize","Vehiculo","Servicio","Cliente","Pedido","RegistroServicio","router","express","Router","route","get","req","res","findAll","then","products","status","json","catch","err","send","servicios","clientes","query","skip","filter","value","pedido","include","model","limit","order","offset","parseInt","where","nombre","Op","like","or","telefono","findAndCountAll","response","pedidos","rows","count","registros","id","params","idPedido","idVehiculo","reverse","frenos","i","freno","find","f","idServicio","push","cantidad","noParte","numeroParte","precio","manoObra","activado","suspensiones","suspension","post","body","nombreCliente","nombreVehiculo","placa","manoObraTotal","factura","folio","total","otros","cambioAceite","afinacion","costoOtros","findOrCreate","defaults","cliente","clientCreated","dataValues","update","vehiculo","registro","build","idCliente","fecha","Date","save","bulkCreate","servicio","map"],"mappings":"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","file":"pedidos.js","sourcesContent":["import express from 'express';\n\nconst nombresServicios = [\n\t'Balata delanteras',\n\t'Balata traseras',\n\t'Disco nuevo',\n\t'Tambor nuevo',\n\t'Bomba de frenos',\n\t'Cilindro de rueda',\n\t'Líquido',\n\t'Herrajes',\n\t'Rectificado disco',\n\t'Rectificado tambor',\n\t'Bujías',\n\t'Aceite',\n\t'Filtro gasolina',\n\t'Filtro aceite',\n\t'Filtro aire',\n\t'Presurisado',\n\t'CARBUCLINK',\n\t'ANTICONGELANTE',\n\t'Amortiguadores delanteros',\n\t'Amortiguadores traseros',\n\t'Base amortiguadores delanteros',\n\t'Base amortiguadores traseros',\n\t'Bieletas',\n\t'Terminales',\n\t'Rótula inferior',\n\t'Rótula superior',\n\t'Tornillo estabilizador delantero',\n\t'Tornillo estabilizador trasero',\n\t'Bujes superior',\n\t'Horquilla inferior',\n\t'Horquilla superior',\n\t'Goma barra estabilizadora',\n\t'Goma cremallera',\n\t'Buje inferior grande',\n\t'Buje inferior chico',\n\t'Maza',\n\t'Balero doble',\n];\n\nexport default (sequelize, Vehiculo, Servicio, Cliente, Pedido, RegistroServicio) => {\n\tconst router = express.Router();\n\n\t// Métodos get all\n\trouter.route('/vehiculos')\n\t\t.get((req, res) => {\n      Vehiculo.findAll()\n      .then((products) => {\n        res.status(200).json(products);\n      })\n      .catch((err) => {\n        res.status(500).send(err);\n      });\n\t\t});\n\n\trouter.route('/servicios')\n\t\t.get((req, res) => {\n      Servicio.findAll()\n      .then((servicios) => {\n        res.status(200).json(servicios);\n      })\n      .catch((err) => {\n        res.status(500).send(err);\n      });\n\t\t});\n\n\trouter.route('/clientes')\n\t\t.get((req, res) => {\n      Cliente.findAll()\n      .then((clientes) => {\n        res.status(200).json(clientes);\n      })\n      .catch((err) => {\n        res.status(500).send(err);\n      });\n\t\t});\n\n\trouter.route('/pedidos')\n\t\t.get((req, res) => {\n\t\t\tconst { skip, filter, value } = req.query;\n\t\t\tconst pedido = {\n\t\t\t\tinclude: [\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel: Vehiculo,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel: Cliente,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\tlimit: 20,\n\t\t\t\torder: [\n\t\t\t\t\t['fecha', 'DESC'],\n\t\t\t\t],\n\t\t\t};\n\t\t\tif (skip) pedido.offset = parseInt(skip);\n\t\t\tif (filter && value) {\n\t\t\t\tif (filter === 'vehiculo') {\n\t\t\t\t\tpedido.include[0].where = {\n\t\t\t\t\t\tnombre: { [sequelize.Op.like]: `%${value}%` },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse if (filter === 'cliente') {\n\t\t\t\t\tpedido.include[1].where = {\n\t\t\t\t\t\t[sequelize.Op.or]: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tnombre: { [sequelize.Op.like]: `%${value}%` },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttelefono: { [sequelize.Op.like]: `${value}%` },\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpedido.where = {\n\t\t\t\t\t\t[filter]: { [sequelize.Op.like]: `%${value}%` },\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\tPedido.findAndCountAll(pedido)\n\t\t\t.then((response) => {\n\t\t\t\tres.status(200).json({\n\t\t\t\t\tpedidos: response.rows,\n\t\t\t\t\tcount: response.count,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tres.status(500).send(err);\n\t\t\t});\n\t\t});\n\n\trouter.route('/registroservicios')\n\t\t.get((req, res) => {\n\t\t\tRegistroServicio.findAll()\n\t\t\t.then((registros) => {\n\t\t\t\tres.status(200).json(registros);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tres.status(500).send(err);\n\t\t\t});\n\t\t});\n\n\trouter.route('/servicios-pedido/:id')\n\t\t.get((req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tRegistroServicio.findAll({\n\t\t\t\twhere: {\n\t\t\t\t\tidPedido: id,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((servicios) => {\n\t\t\t\tres.status(200).send(servicios);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tres.status(500).send(err);\n\t\t\t})\n\t\t});\n\n\trouter.route('/servicios-auto/:id')\n\t\t.get((req, res) => {\n\t\t\tconst id = req.params.id;\n\t\t\tRegistroServicio.findAll({\n\t\t\t\twhere: {\n\t\t\t\t\tidVehiculo: id,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((servicios) => {\n\t\t\t\tservicios.reverse();\n\t\t\t\tconst frenos = [];\n\t\t\t\tfor (let i = 1; i <= 18; i++) {\n\t\t\t\t\tconst freno = servicios.find((f) => f.idServicio === i);\n\t\t\t\t\tif (freno) {\n\t\t\t\t\t\tfrenos.push({\n\t\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t\t\tnombre: nombresServicios[i - 1],\n\t\t\t\t\t\t\tcantidad: freno.cantidad,\n\t\t\t\t\t\t\tnoParte: freno.numeroParte,\n\t\t\t\t\t\t\tprecio: freno.precio,\n\t\t\t\t\t\t\tmanoObra: freno.manoObra,\n\t\t\t\t\t\t\tactivado: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfrenos.push({\n\t\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t\t\tnombre: nombresServicios[i - 1],\n\t\t\t\t\t\t\tcantidad: '',\n\t\t\t\t\t\t\tnoParte: '',\n\t\t\t\t\t\t\tprecio: '',\n\t\t\t\t\t\t\tmanoObra: '',\n\t\t\t\t\t\t\tactivado: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst suspensiones = [];\n\t\t\t\tfor (let i = 19; i <= 37; i++) {\n\t\t\t\t\tconst suspension = servicios.find((f) => f.idServicio === i);\n\t\t\t\t\tif (suspension) {\n\t\t\t\t\t\tsuspensiones.push({\n\t\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t\t\tnombre: nombresServicios[i - 1],\n\t\t\t\t\t\t\tcantidad: suspension.cantidad,\n\t\t\t\t\t\t\tnoParte: suspension.numeroParte,\n\t\t\t\t\t\t\tprecio: suspension.precio,\n\t\t\t\t\t\t\tmanoObra: suspension.manoObra,\n\t\t\t\t\t\t\tactivado: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsuspensiones.push({\n\t\t\t\t\t\t\tvalue: i,\n\t\t\t\t\t\t\tnombre: nombresServicios[i - 1],\n\t\t\t\t\t\t\tcantidad: '',\n\t\t\t\t\t\t\tnoParte: '',\n\t\t\t\t\t\t\tprecio: '',\n\t\t\t\t\t\t\tmanoObra: '',\n\t\t\t\t\t\t\tactivado: false,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tres.status(200).send({\n\t\t\t\t\tfrenos,\n\t\t\t\t\tsuspensiones,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tres.status(500).send(err);\n\t\t\t});\n\t\t});\n\n\trouter.route('/nueva-orden')\n\t\t.post((req, res) => {\n\t\t\tconst {\n\t\t\t\tnombreCliente,\n\t\t\t\ttelefono,\n\t\t\t\tnombreVehiculo,\n\t\t\t\tplaca,\n\t\t\t\tmanoObraTotal,\n\t\t\t\tfactura,\n\t\t\t\tfolio,\n\t\t\t\ttotal,\n\t\t\t\tservicios,\n\t\t\t\totros,\n\t\t\t\tcambioAceite,\n\t\t\t\tafinacion,\n\t\t\t\tcostoOtros,\n\t\t\t} = req.body;\n\t\t\tCliente.findOrCreate({\n\t\t\t\twhere: {\n\t\t\t\t\tnombre: nombreCliente,\n\t\t\t\t},\n\t\t\t\tdefaults: {\n\t\t\t\t\tnombre: nombreCliente,\n\t\t\t\t\ttelefono,\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then(([cliente, clientCreated]) => {\n\t\t\t\tif (!clientCreated && cliente.dataValues.telefono !== telefono) {\n\t\t\t\t\tcliente.update({\n\t\t\t\t\t\ttelefono,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tVehiculo.findOrCreate({\n\t\t\t\t\twhere: {\n\t\t\t\t\t\tnombre: nombreVehiculo,\n\t\t\t\t\t},\n\t\t\t\t\tdefaults: {\n\t\t\t\t\t\tnombre: nombreVehiculo,\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t\t.then(([vehiculo]) => {\n\t\t\t\t\tconst registro = Pedido.build({\n\t\t\t\t\t\tidVehiculo: vehiculo.id,\n\t\t\t\t\t\tidCliente: cliente.id,\n\t\t\t\t\t\tfecha: new Date(),\n\t\t\t\t\t\tplaca,\n\t\t\t\t\t\tmanoObraTotal,\n\t\t\t\t\t\tfactura,\n\t\t\t\t\t\tfolio,\n\t\t\t\t\t\ttotal,\n\t\t\t\t\t\totros,\n\t\t\t\t\t\tcambioAceite,\n\t\t\t\t\t\tafinacion,\n\t\t\t\t\t\tcostoOtros,\n\t\t\t\t\t});\n\t\t\t\t\tregistro.save().then(() => {\n\t\t\t\t\t\tRegistroServicio\n\t\t\t\t\t\t.bulkCreate(servicios\n\t\t\t\t\t\t\t.filter((servicio) => servicio.activado && servicio.cantidad && servicio.noParte && servicio.precio)\n\t\t\t\t\t\t\t.map((servicio) => ({\n\t\t\t\t\t\t\t\tidVehiculo: vehiculo.id,\n\t\t\t\t\t\t\t\tidServicio: servicio.value,\n\t\t\t\t\t\t\t\tidPedido: registro.id,\n\t\t\t\t\t\t\t\tnumeroParte: servicio.noParte,\n\t\t\t\t\t\t\t\tmanoObra: servicio.manoObra,\n\t\t\t\t\t\t\t\tprecio: servicio.precio,\n\t\t\t\t\t\t\t\tcantidad: servicio.cantidad,\n\t\t\t\t\t\t})))\n\t\t\t\t\t\t.then((servicios) => {\n\t\t\t\t\t\t\tres.status(200).send({\n\t\t\t\t\t\t\t\tregistro,\n\t\t\t\t\t\t\t\tservicios,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n        res.status(500).send(err);\n      });\n\t\t});\n\n\t\treturn router;\n};\n"]}
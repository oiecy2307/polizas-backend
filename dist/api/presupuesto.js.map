{"version":3,"sources":["../../src/api/presupuesto.js"],"names":["sequelize","Producto","Presupuesto","ItemPresupuesto","ItemGananciaEstimada","ItemCantidadEstimada","router","express","Router","route","get","req","res","findAll","then","products","status","json","catch","err","send","include","model","post","body","periodo","gananciaPresupuestadaTotal","cantidadPresupuestadaTotal","anio","error","presupuesto","build","save","newPresupuesto","e","presupuestoId","productoId","itemPresupuesto","presupuestoid","CIDPRODUCTO","newItemPresupuesto","cantidad","presupuestoitemid","itemGanancia","newItemGanancia","itemCantidad","newItemCantidad"],"mappings":"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","file":"presupuesto.js","sourcesContent":["import express from 'express';\n\nexport default (sequelize, Producto, Presupuesto, ItemPresupuesto, ItemGananciaEstimada, ItemCantidadEstimada) => {\n\tconst router = express.Router();\n\n\t// GET ALL PRODUCTS\n\trouter.route('/')\n\t\t.get((req, res) => {\n      Producto.findAll()\n      .then((products) => {\n        res.status(200).json(products);\n      })\n      .catch((err) => {\n        res.status(500).send(err);\n      });\n\t\t});\n\n\t// GET PRESUPUESTO\n\trouter.route('/presupuesto')\n\t\t.get((req, res) => {\n\t\t\tPresupuesto.findAll({\n\t\t\t\tinclude: [{\n\t\t\t\t\tmodel: ItemPresupuesto,\n\t\t\t\t\tinclude: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodel: Producto,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodel: ItemGananciaEstimada,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmodel: ItemCantidadEstimada,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t}],\n\t\t\t})\n\t\t\t.then((products) => {\n\t\t\t\tres.status(200).json(products);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tres.status(500).send(err);\n\t\t\t});\n\t\t});\n\n\t// CREATE NEW PRESUPUESTO\n\trouter.route('/presupuesto')\n\t\t.post((req, res) => {\n\t\t\ttry {\n\t\t\t\tconst {\n\t\t\t\t\tperiodo,\n\t\t\t\t\tgananciaPresupuestadaTotal,\n\t\t\t\t\tcantidadPresupuestadaTotal,\n\t\t\t\t\tanio,\n\t\t\t\t} = req.body;\n\t\t\t\tif (!periodo) {\n\t\t\t\t\tres.status(400).json({ error: 'Faltan par치metros' });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst presupuesto = Presupuesto.build({\n\t\t\t\t\tperiodo,\n\t\t\t\t\tgananciaPresupuestadaTotal,\n\t\t\t\t\tcantidadPresupuestadaTotal,\n\t\t\t\t\tanio,\n\t\t\t\t});\n\n\t\t\t\tpresupuesto\n\t\t\t\t.save()\n\t\t\t\t.then((newPresupuesto) => {\n\t\t\t\t\tres.status(200).json(newPresupuesto);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tres.status(500).send(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tres.status(500).send(e);\n\t\t\t}\n\t\t});\n\n\t//CREATE NEW ITEM PRESUPUESTO\n\trouter.route('/item-presupuesto')\n\t\t.post((req, res) => {\n\t\t\ttry {\n\t\t\t\tconst {\n\t\t\t\t\tpresupuestoId,\n\t\t\t\t\tproductoId,\n\t\t\t\t} = req.body;\n\t\t\t\tif (!presupuestoId || !productoId) {\n\t\t\t\t\tres.status(400).json({ error: 'Faltan par치metros' });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst itemPresupuesto = ItemPresupuesto.build({\n\t\t\t\t\tpresupuestoid: presupuestoId,\n\t\t\t\t\tCIDPRODUCTO: productoId,\n\t\t\t\t});\n\n\t\t\t\titemPresupuesto\n\t\t\t\t\t.save()\n\t\t\t\t\t.then((newItemPresupuesto) => {\n\t\t\t\t\t\tres.status(200).json(newItemPresupuesto);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\tres.status(500).send(e);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tres.status(500).send(e);\n\t\t\t}\n\t\t});\n\n\t//CREATE NEW ITEM GANANCIA\n\trouter.route('/item-ganancia')\n\t\t.post((req, res) => {\n\t\t\ttry {\n\t\t\t\tconst {\n\t\t\t\t\tcantidad,\n\t\t\t\t\tperiodo,\n\t\t\t\t\tpresupuestoitemid,\n\t\t\t\t} = req.body;\n\t\t\t\tif (!cantidad || !periodo || !presupuestoitemid) {\n\t\t\t\t\tres.status(400).json({ error: 'Faltan par치metros' });\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst itemGanancia = ItemGananciaEstimada.build({\n\t\t\t\t\tcantidad,\n\t\t\t\t\tperiodo,\n\t\t\t\t\tpresupuestoitemid,\n\t\t\t\t});\n\n\t\t\t\titemGanancia\n\t\t\t\t\t.save()\n\t\t\t\t\t.then((newItemGanancia) => {\n\t\t\t\t\t\tres.status(200).json(newItemGanancia);\n\t\t\t\t\t})\n\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\tres.status(500).send(e);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tres.status(500).send(e);\n\t\t\t}\n\t\t});\n\n\t\t//CREATE NEW ITEM CANTIDAD\n\t\trouter.route('/item-cantidad')\n\t\t\t.post((req, res) => {\n\t\t\t\ttry {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tcantidad,\n\t\t\t\t\t\tperiodo,\n\t\t\t\t\t\tpresupuestoitemid,\n\t\t\t\t\t} = req.body;\n\t\t\t\t\tif (!cantidad || !periodo || !presupuestoitemid) {\n\t\t\t\t\t\tres.status(400).json({ error: 'Faltan par치metros' });\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tconst itemCantidad = ItemCantidadEstimada.build({\n\t\t\t\t\t\tcantidad,\n\t\t\t\t\t\tperiodo,\n\t\t\t\t\t\tpresupuestoitemid,\n\t\t\t\t\t});\n\n\t\t\t\t\titemCantidad\n\t\t\t\t\t\t.save()\n\t\t\t\t\t\t.then((newItemCantidad) => {\n\t\t\t\t\t\t\tres.status(200).json(newItemCantidad);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((e) => {\n\t\t\t\t\t\t\tres.status(500).send(e);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tres.status(500).send(e);\n\t\t\t\t}\n\t\t\t});\n\treturn router;\n};\n"]}
{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","enable","use","exposedHeaders","config","corsHeaders","bodyParser","json","limit","bodyLimit","express","static","__dirname","engine","require","renderFile","set","listen","process","env","PORT","port","console","log","address","get","req","res","status","render","path","join","db"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAFA;AAIA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEAA,IAAII,MAAJ,CAAW,aAAX,E,CAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEAJ,IAAIK,GAAJ,CAAQ,uBAAR;;AAEA;AACAL,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAL,IAAIK,GAAJ,CAAQ,oBAAK;AACZC,kBAAgBC,iBAAOC;AADX,CAAL,CAAR;;AAIAR,IAAIK,GAAJ,CAAQI,qBAAWC,IAAX,CAAgB;AACvBC,SAAQJ,iBAAOK;AADQ,CAAhB,CAAR;;AAIAZ,IAAIK,GAAJ,CAAQQ,kBAAQC,MAAR,CAAkBC,SAAlB,aAAR;AACAf,IAAIK,GAAJ,CAAQQ,kBAAQC,MAAR,CAAkBC,SAAlB,aAAR;AACAf,IAAIK,GAAJ,CAAQQ,kBAAQC,MAAR,CAAkBC,SAAlB,UAAR;;AAEAf,IAAIgB,MAAJ,CAAW,MAAX,EAAmBC,QAAQ,KAAR,EAAeC,UAAlC;AACAlB,IAAImB,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEAnB,IAAIC,MAAJ,CAAWmB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBhB,iBAAOiB,IAA7C,EAAmD,YAAM;AACvDC,UAAQC,GAAR,sBAA+B1B,IAAIC,MAAJ,CAAW0B,OAAX,GAAqBH,IAApD;AACD,CAFD;;AAIAxB,IAAI4B,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,MAAhB,CAAuBC,eAAKC,IAAL,CAAanB,SAAb,wBAAvB;AACD,CAFD;;AAIAf,IAAI4B,GAAJ,CAAQ,QAAR,EAAkB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,MAAhB,CAAuBC,eAAKC,IAAL,CAAanB,SAAb,wBAAvB;AACD,CAFD;;AAIA,kBAAa,UAACoB,EAAD,EAAQ;AACnB;AACAnC,MAAIK,GAAJ,CAAQ,0BAAW,EAAEE,wBAAF,EAAU4B,MAAV,EAAX,CAAR;AACA;AACAnC,MAAIK,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAAEE,wBAAF,EAAU4B,MAAV,EAAJ,CAAhB;AACD,CALD;;kBAOenC,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\n// import rateLimit from 'express-rate-limit';\nimport helmet from 'helmet';\nimport path from 'path';\n\nlet app = express();\napp.server = http.createServer(app);\n\napp.enable(\"trust proxy\"); // only if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB, Nginx, etc)\n// const limiter = rateLimit({\n//   windowMs: 15 * 60 * 1000, // 15 minutes\n//   max: 100, // limit each IP to 100 requests per windowMs\n// });\n// //  apply to all requests\n// app.use(limiter);\n\napp.use(helmet());\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders,\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit,\n}));\n\napp.use(express.static(`${__dirname}/builds`));\napp.use(express.static(`${__dirname}/public`));\napp.use(express.static(`${__dirname}/css`));\n\napp.engine('html', require('ejs').renderFile);\napp.set('view engine', 'html');\n\napp.server.listen(process.env.PORT || config.port, () => {\n  console.log(`Started on port ${app.server.address().port}`);\n});\n\napp.get('/', (req, res) => {\n  res.status(200).render(path.join(`${__dirname}/public/index.html`));\n});\n\napp.get('/nuevo', (req, res) => {\n  res.status(200).render(path.join(`${__dirname}/public/nuevo.html`));\n});\n\ninitializeDb((db) => {\n  // internal middleware\n  app.use(middleware({ config, db }));\n  // api router\n  app.use('/api', api({ config, db }));\n});\n\nexport default app;\n"]}
{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","enable","limiter","windowMs","max","use","exposedHeaders","config","corsHeaders","bodyParser","json","limit","bodyLimit","get","req","res","console","log","body","send","db","listen","process","env","PORT","port","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEAA,IAAII,MAAJ,CAAW,aAAX,E,CAA2B;AAC3B,IAAMC,UAAU,gCAAU;AACxBC,WAAU,KAAK,EAAL,GAAU,IADI,EACE;AAC1BC,MAAK,GAFmB,CAEd;AAFc,CAAV,CAAhB;AAIA;AACAP,IAAIQ,GAAJ,CAAQH,OAAR;;AAEAL,IAAIQ,GAAJ,CAAQ,uBAAR;;AAEA;AACAR,IAAIQ,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAEA;AACAR,IAAIQ,GAAJ,CAAQ,oBAAK;AACZC,iBAAgBC,iBAAOC;AADX,CAAL,CAAR;;AAIAX,IAAIQ,GAAJ,CAAQI,qBAAWC,IAAX,CAAgB;AACvBC,QAAQJ,iBAAOK;AADQ,CAAhB,CAAR;;AAIAf,IAAIgB,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCC,SAAQC,GAAR,CAAYH,GAAZ;AACAE,SAAQC,GAAR,CAAYH,IAAII,IAAhB;AACAH,KAAII,IAAJ,CAAS,MAAT;AACD,CAJD;;AAMA;AACA,kBAAa,UAACC,EAAD,EAAQ;;AAEpB;AACAvB,KAAIQ,GAAJ,CAAQ,0BAAW,EAAEE,wBAAF,EAAUa,MAAV,EAAX,CAAR;;AAEA;AACAvB,KAAIQ,GAAJ,CAAQ,MAAR,EAAgB,mBAAI,EAAEE,wBAAF,EAAUa,MAAV,EAAJ,CAAhB;;AAEAvB,KAAIC,MAAJ,CAAWuB,MAAX,CAAkBC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBjB,iBAAOkB,IAA7C,EAAmD,YAAM;AACxDT,UAAQC,GAAR,sBAA+BpB,IAAIC,MAAJ,CAAW4B,OAAX,GAAqBD,IAApD;AACA,EAFD;AAGA,CAXD;;kBAae5B,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport initializeDb from './db';\nimport middleware from './middleware';\nimport api from './api';\nimport config from './config.json';\nimport rateLimit from 'express-rate-limit';\nimport helmet from 'helmet';\n\nlet app = express();\napp.server = http.createServer(app);\n\napp.enable(\"trust proxy\"); // only if you're behind a reverse proxy (Heroku, Bluemix, AWS ELB, Nginx, etc)\nconst limiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n});\n//  apply to all requests\napp.use(limiter);\n\napp.use(helmet());\n\n// logger\napp.use(morgan('dev'));\n\n// 3rd party middleware\napp.use(cors({\n\texposedHeaders: config.corsHeaders,\n}));\n\napp.use(bodyParser.json({\n\tlimit : config.bodyLimit,\n}));\n\napp.get('/connect', (req, res) => {\n  console.log(req);\n  console.log(req.body);\n  res.send('HOLA');\n});\n\n// connect to db\ninitializeDb((db) => {\n\n\t// internal middleware\n\tapp.use(middleware({ config, db }));\n\n\t// api router\n\tapp.use('/api', api({ config, db }));\n\n\tapp.server.listen(process.env.PORT || config.port, () => {\n\t\tconsole.log(`Started on port ${app.server.address().port}`);\n\t});\n});\n\nexport default app;\n"]}